#Werlyne Alphonse
#My Password Checker

import time

def title():
    #Have a cute title, align it and stuff later ig
    print("====================================================================")
    print("                Welcome to my passward checker!!!                   ")
    print("====================================================================")
    print()
    time.sleep(1)

def rules():
    #tell passward criteria
    print("Here is what you need to know...")
    print()
    time.sleep(1)
    print("1. At least 12 characters long")
    time.sleep(0.25)
    print("2. Contains at least one uppercase letter (A–Z)")
    time.sleep(0.25)
    print("3. Contains at least one lowercase letter (a–z)")
    time.sleep(0.25)
    print("4. Contains at least one number (0–9)")
    time.sleep(0.25)
    print("5. Contains at least one special character (like ! @ # $ % ^ & * ?")
    time.sleep(0.25)
    print("6. No spaces allowed")
    time.sleep(0.25)
    print("7. Not a common password or dictionary word")
    time.sleep(0.25)
    print("8. No repeated sequences (like aaaa or 123123)")
    print()

def checkReady():
    #ask if understand, show rules again if not, continue if do
    while True:
        time.sleep(1)
        print("So... got all that?")
        time.sleep(0.5)
        print()
        repeat = input("Yes or No: ").strip().lower()
        if repeat not in ["yes", "no"]:
            print("That is not a valid input, try just typing 'Yes' or 'No'")
            print()
        else:
            repeatCheck = input("You sure? ").strip().lower()
            if repeatCheck not in ["yes", "no"]:
                print("That is not a valid input, try just typing 'Yes' or 'No'")
                print()
            else:
                break
    
    while ((repeat == "yes" and repeatCheck == "no") or (repeat == "no" and repeatCheck == "yes")):
        print("\nRemember it this time please...")
        print()
        print("Here is what you need to know...")
        print("1. At least 12 characters long")
        print("2. Contains at least one uppercase letter (A–Z)")
        print("3. Contains at least one lowercase letter (a–z)")
        print("4. Contains at least one number (0–9)")
        print("5. Contains at least one special character like: ( ) ! @ # $ % ^ & * ?")
        print("6. No spaces allowed")
        print("7. Not a common password or dictionary word")
        print("8. No 3+ repeated sequences (like aaaa or 123123)")
        print()
        print("Got it?")
        time.sleep(0.5)
        repeat = input("Yes or No: ").strip().lower()
        repeatCheck = input("You sure? ").strip().lower()

    if ((repeat == "yes" and repeatCheck == "yes") or (repeat == "no" and repeatCheck == "no")):
        repeat = "no"
        print("\n***   Lets get started   ***")
        time.sleep(0.5) 
        print()
    else:
        print("Oopsies - error 1")

def checkPassword():
    #ask for password, check if valid
    passwordCheck = "valid"
    while (passwordCheck == "valid"):
        print("Okay, if you are good to go then lets go!") 
        time.sleep(0.5) 
        password = input("Go on, passward: ")
        print()

        #fun gui thing - checking...
        print("Checking validaty...")
        time.sleep(1)
        print(".")
        time.sleep(1)
        print(".")
        time.sleep(1)
        print(".")
        time.sleep(1)
        print()

        # track invalid states
        invalidLen = False
        invalidUpper = False
        invalidLower = False
        invalidNum = False
        invalidSpecial = False
        invalidSpace = False
        invalidCommon = False
        invalidRepeat = False

        #title for checks
        print("***   Check Results   ***")
        print()
        
        #check for score percetange later
        score = 0

        #check if has 12 chars
        if (len(password) < 12):
            print("Invalid: Missing AT LEAST 12 characters!")
            time.sleep(0.5)
            passwordCheck = "invalid"
            invalidLen = True
        else:
            print("Valid: Has at least 12 Chars")
            time.sleep(0.5)
            score += 0.125

        #check if has at least 1 upper
        hasUpper = False
        for char in password: #checks for each char
            if char.isupper(): #see's if any char checked is upper
                hasUpper = True
                break #stops checking
            
        #tell user conclusion   
        if hasUpper == True:
            print("Valid: Has AT LEAST 1 upper")
            time.sleep(0.5)
            score += 0.125
        else:
            print("Invalid: Missing AT LEAST 1 upper")
            time.sleep(0.5)
            passwordCheck = "invalid"
            invalidUpper = True
                
        #check for at least 1 lower
        hasLower = False
        for char in password: 
            if char.islower():
                hasLower = True
                break

        #tell user
        if hasLower == True:
            print("Valid: Has AT LEAST 1 lower")
            time.sleep(0.5)
            score += 0.125
        else:
            print("Invalid: Missing AT LEAST 1 lower")
            time.sleep(0.5)
            passwordCheck = "invalid"
            invalidLower = True

        #check for at least 1 number
        hasNumber = False
        for char in password: 
            if char.isdigit():
                hasNumber = True
                break

        #tell user
        if hasNumber == True:
            print("Valid: Has AT LEAST 1 number")
            time.sleep(0.5)
            score += 0.125
        else:
            print("Invalid: Missing AT LEAST 1 number")
            time.sleep(0.5)
            passwordCheck = "invalid"
            invalidNum = True

        #check for at least 1 special char
        specialChars = "()!@#$%^&*?-_=+[]{}|;:',.<>/~`"
        hasSpecial = False
        for char in password: 
            if char in specialChars:
                hasSpecial = True
                break

        #tell user
        if hasSpecial == True:
            print("Valid: Has AT LEAST 1 special char")
            time.sleep(0.5)
            score += 0.125
        else:
            print("Invalid: Missing AT LEAST 1 special char")
            time.sleep(0.5)
            passwordCheck = "invalid"
            invalidSpecial = True

        #check for spaces
        if " " in password:
            print("Invalid: No spaces allowed")
            time.sleep(0.5)
            passwordCheck = "invalid"
            invalidSpace = True
        else:
            print("Valid: No spaces")
            time.sleep(0.5)
            score += 0.125

        #check for common passwards
        commonPasswords = ["password", "123456", "123456789", "12345678", "qwerty", "abc123", "football", "monkey", "letmein", "shadow", "master", "666666", "qwertyuiop", "123321", "mustang", "1234567", "welcome", "1234567890", "admin", "login", "princess", "solo", "starwars"]
        if password.lower() in commonPasswords:
            print("Invalid: No common passwards allowed")
            time.sleep(0.5)
            passwordCheck = "invalid"
            invalidCommon = True
        else:
            print("Valid: Not a common passward")
            time.sleep(0.5)
            score += 0.125
        
        #check for repeated sequences
        hasRepeat = False
        for i in range(len(password) - 2): #goes through each char except last 2
            seq = password[i:i+3] #takes 3 char sequence starting at current char
            if seq in password[i+3:]: #checks if that sequence appears again later in pass
                hasRepeat = True
                break #stops checking if found
        if hasRepeat == True:
            print("Invalid: No repeated sequences allowed")
            time.sleep(0.5)
            passwordCheck = "invalid"
            invalidRepeat = True
        else:
            print("Valid: No repeated sequences")
            time.sleep(0.5)
            score += 0.125
                
        #allow to fix pass mistake if needed       
        if (passwordCheck == "invalid"):
            time.sleep(1)
            print("\nloading Password Score...")
            time.sleep(0.5)
            print(".")
            time.sleep(0.5)
            print(".")
            time.sleep(0.5)
            print(".") 
            time.sleep(1)
            print(f"Your password scored {score*100}%, please try again with the proper corrections below:")
            score = 0 #reset score for next try
            
            #tell specific issues
            if invalidLen == True:
                print("- Missing AT LEAST 12 characters")
                time.sleep(0.5)
            if invalidUpper == True:
                print("- Missing AT LEAST 1 upper")
                time.sleep(0.5)
            if invalidLower == True:
                print("- Missing AT LEAST 1 lower")
                time.sleep(0.5)
            if invalidNum == True:
                print("- Missing AT LEAST 1 number")
                time.sleep(0.5)
            if invalidSpecial == True:
                print("- Missing AT LEAST 1 special")
                time.sleep(0.5)
            if invalidSpace == True:
                print("- Missing exclusion of space(s)")
                time.sleep(0.5)
            if invalidCommon == True:
                print("- Missing exclusion of common password")
                time.sleep(0.5)
            if invalidRepeat == True:
                print("- Missing exclusion of repeat chars")
                time.sleep(0.5)
            
            password = input("\nPress Any Key to Continue: ")
            time.sleep(1)
            print()
            passwordCheck = "valid"
        else:
            print()
            print("**** No Errors Found ****")
            passwordCheck = "invalid"
            time.sleep(1)
    return password

def success():
    #congrats on making strong passward
    print()
    print("Good job, nice password. I shall now test you!")
    time.sleep(1)

    #question if you will remember this or need to write it down
    print()
    print("I task you to remeber this password without writing it down...\n")
    time.sleep(2)
    print("***   Login   ***\n")
    time.sleep(0.5)

def login(password):
    #prompt to "log in" without had writting password down
    login = input("Password: ")
    time.sleep(1)
    print("\n***   Attempting Login, Please Wait   ***")
    time.sleep(1)
    print(".")
    time.sleep(1)
    print(".")
    time.sleep(1)
    print(".")
    time.sleep(1)
    print()

    #compare real password with login, if not then ask to retry
    while (login != password):
        print("Incorrect, try again")
        time.sleep(0.5)
        login = input("Password: ")
        print()
    print("Correct, you can sleep good knowing you have a decent password!")
    time.sleep(0.5)
    print()

#main code
def main():
    title()
    rules()
    checkReady()
    password = checkPassword()
    success()
    login(password)

main()

#Dev Note: Took me like 6 hours to make this, I am so proud of myself ngl
#I progressed with loops, conditionals, boolean logic, and iteration
#added functions for modularized code - 9/30/25
